# Dockerfile

FROM redis:6-alpine
 
ENV SENTINEL_QUORUM 2
ENV SENTINEL_DOWN_AFTER 1000
ENV SENTINEL_FAILOVER 1000
 
RUN mkdir -p /redis
 
WORKDIR /redis
 
COPY sentinel.conf .
COPY sentinel-entrypoint.sh /usr/local/bin/
 
RUN chown redis:redis /redis/* && \
    chmod +x /usr/local/bin/sentinel-entrypoint.sh
 
EXPOSE 27070
 
ENTRYPOINT ["sentinel-entrypoint.sh"]

------
# sentinel.conf

port 27070

dir /tmp

sentinel resolve-hostnames yes
sentinel monitor redismaster redis-master 7070 $SENTINEL_QUORUM
sentinel down-after-milliseconds redismaster $SENTINEL_DOWN_AFTER
sentinel parallel-syncs redismaster 1
sentinel failover-timeout redismaster $SENTINEL_FAILOVER

------
# sentinel-entrypoint.sh
#!/bin/sh
 
sed -i "s/\$SENTINEL_QUORUM/$SENTINEL_QUORUM/g" /redis/sentinel.conf
sed -i "s/\$SENTINEL_DOWN_AFTER/$SENTINEL_DOWN_AFTER/g" /redis/sentinel.conf
sed -i "s/\$SENTINEL_FAILOVER/$SENTINEL_FAILOVER/g" /redis/sentinel.conf
 
redis-server /redis/sentinel.conf --sentinel

------
# docker-compose.yml

version: '3.7'

services:
 
  app:
    image: demo-image
    links:
      - redis-sentinel
     
  redis-master:
    image: redis:6-alpine
    volumes:
      - "./.data:/data"
    ports:
      - "7070:7070"
 
  redis-slave:
    image: redis:6-alpine
    command: redis-server --slaveof redis-master 7070
    links:
      - redis-master
    volumes:
      - "./.data:/data"
     
  # Instance 1
  redis-sentinel:
    build: 
      context: ./redis-sentinel
    links:
      - redis-master
 
  # Instance 2
  redis-sentinel2:
    build: 
      context: ./redis-sentinel
    links:
      - redis-master
 
  # Instance 3
  redis-sentinel3:
    build: 
      context: ./redis-sentinel
    links:
      - redis-master
